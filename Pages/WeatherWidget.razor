@page "/weather"
@using WeatherAPI.Services
@using WeatherAPI.Models
@using System.Text


<article class="widget-wrapper">
    <div class="widget">
        <div class="widget-top-row">
            <div class="temp">
                <ul class="list-unstyled list-group">
                    <li class="text-fine position-widget-label garafont">High of</li>
                    <li class="text-large garafont">@temp&deg;</li>
                </ul>
            </div>
            <div class="desc">
                <div class="weatherCondition garafont bold">@shortForecast</div>
                <div class="place garafont bold">Warsaw, NY</div>
            </div>
        </div>
        <div class="widget-bottom-row">
            <div class="the-date alpacafont bold">
                @dateString
            </div>
        </div>
    </div>
    <div class="weather-icon">
        <i class="wi @weatherIconClass"></i>
    </div>
</article>





@code {

    ForecastModel _forecast = new ForecastModel();
    WeatherService _weatherservice = new WeatherService();
    WeatherModel _iconclass = new WeatherModel();

    //string isDay = "day";
    string temp = "Loading";
    string tempUnits = "Loading";
    string shortForecast = "Loading";
    string weatherIconClass = "";
    string dateString = DateTime.Now.ToString("MMMM dd, yyyy");

    protected override async Task OnInitializedAsync()
    {
        _forecast = await _weatherservice.GetWeatherAsync();
        if (_forecast != null)
        {
            if (_forecast.properties != null)
            {
                if (_forecast.properties.periods != null)
                {
                    bool iconFound = false;

                    temp = _forecast.properties.periods[0].temperature.ToString();
                    tempUnits = _forecast.properties.periods[0].temperatureUnit;
                    shortForecast = _forecast.properties.periods[0].shortForecast;

                    if (!(_forecast.properties.periods[0].isDaytime))
                    {
                        if (_iconclass.NightWeatherDescription.ContainsKey(shortForecast))
                        {
                            weatherIconClass = _iconclass.NightWeatherDescription[shortForecast];
                        }
                        else
                        {
                            foreach (var substring in shortForecast.Split(" "))
                            {
                                if (_iconclass.NightWeatherDescription.ContainsKey(substring))
                                {
                                    weatherIconClass = _iconclass.NightWeatherDescription[substring];
                                    iconFound = true;
                                }
                            }
                            if (!iconFound)
                            {
                                weatherIconClass = _iconclass.NightWeatherDescription["KeyNotFound"];
                            }

                        }
                    }
                    else
                    {
                        if (_iconclass.DayWeatherDescription.ContainsKey(shortForecast))
                        {
                            weatherIconClass = _iconclass.DayWeatherDescription[shortForecast];
                        }
                        else
                        {
                            foreach (var substring in shortForecast.Split(" "))
                            {
                                if (_iconclass.DayWeatherDescription.ContainsKey(substring))
                                {
                                    weatherIconClass = _iconclass.DayWeatherDescription[substring];
                                    iconFound = true;
                                }
                            }

                            if (!iconFound)
                            {
                                weatherIconClass = _iconclass.DayWeatherDescription["KeyNotFound"];
                            }
                        }
                    }
                }
            }
        }
    }
}